{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Installing Refer to Hashicorp's documentation to install third-party providers Supported Nagios Versions This provider was tested on Nagios XI 5.6.1. It may work with other versions, it will just depend on if there are differences in how the API processes commands. Provider setup The provider requires the following attributes: url (required) - The URL to login to Nagios XI. This should just be the FQDN of the Nagios server, with /nagiosxi appended to it. It defaults to using the environment variable NAGIOS_URL if no value is provided in the provider definition. token (required) - The API token used to login to the Nagios XI API. This value can be found by logging in to the web application, clicking Help , and on the left hand side menu, click Introduction . Then it will be listed under the Authentication section. It defaults to using the environment variable API_TOKEN if no value is provided in the provider definition. Examples provider \"nagios\" { url = \"http://localhost/nagiosxi\" token = \"pd994lfldfjfgGGHPDdj83iDjvdPv9033AAbwewwpPP69fmd4201qQmv0zCzxodD\" }","title":"getting started"},{"location":"#installing","text":"Refer to Hashicorp's documentation to install third-party providers","title":"Installing"},{"location":"#supported-nagios-versions","text":"This provider was tested on Nagios XI 5.6.1. It may work with other versions, it will just depend on if there are differences in how the API processes commands.","title":"Supported Nagios Versions"},{"location":"#provider-setup","text":"The provider requires the following attributes: url (required) - The URL to login to Nagios XI. This should just be the FQDN of the Nagios server, with /nagiosxi appended to it. It defaults to using the environment variable NAGIOS_URL if no value is provided in the provider definition. token (required) - The API token used to login to the Nagios XI API. This value can be found by logging in to the web application, clicking Help , and on the left hand side menu, click Introduction . Then it will be listed under the Authentication section. It defaults to using the environment variable API_TOKEN if no value is provided in the provider definition.","title":"Provider setup"},{"location":"#examples","text":"provider \"nagios\" { url = \"http://localhost/nagiosxi\" token = \"pd994lfldfjfgGGHPDdj83iDjvdPv9033AAbwewwpPP69fmd4201qQmv0zCzxodD\" }","title":"Examples"},{"location":"resources/resource_host/","text":"Resource: Host Overview This resource manages Nagios hosts. Nagios monitors hosts based off health checks defined by an administrator. Refer to the object definition for hosts from Nagios to learn more Best practices This resource allows you to configure any attribute on a host, however, we recommend to manually create a host template that contains common settings for the hosts, and then use the host resource to create your hosts and set host specific attributes. Example resource \"nagios_host\" \"host1\" { name = \"host1\" address = \"127.0.0.1\" display_name = \"host1 - Test server\" max_check_attempts = \"2\" check_period = \"24x7\" notification_interval = \"5\" notification_period = \"24x7\" contacts = [ \"nagiosadmin\" ] alias = \"host1\" templates = [ \"generic-host\" ] check_command = \"check_icmp\" contact_groups = [ \"noc_staff\" ] notes = \"If this host is down for more than 20 mninutes, page out to the operations on-call\" notes_url = \"http://docs.company.com/host_alert\" action_url = \"http://docs.company.com/host_alert/actions\" initial_state = \"s\" retry_interval = \"5\" passive_checks_enabled = 1 active_checks_enabled = 1 obsess_over_host = 0 process_perf_data = 1 notification_options = [ \"d\" ] notifications_enabled = 1 } Arguments Below is a brief description of what each field is used for in Nagios. Refer to the official Nagios documentation for more detail name (required): The name of the host address (required): The IP address of the host display_name : Another name for the host that will be displayed in the web interface. If left blank, the value from name will be displayed max_check_attempts (required): How many times to retry the host check before alerting when the state is anything other than OK check_period (required): The time period during which active checks of the host can be made notification_interval (required): How long to wait before sending another notification to a contact that the host is down notification_period (required): The time period during which notifications can be sent for a host alert contacts (required): The list of users that Nagios should alert when a host is down alias : A longer name to describe the host templates : A list of host templates to apply to the host check_command : The name of the command that should be used to check if the host is up or down contact_groups : A list of the contact groups that should be notified if the host goes down notes : Notes about the host that may assist with troubleshooting notes_url : URL to a third-party documentation respoitory containing more information about the host action_url : URL to a third-party documentation repository containing actions to take in the event the host goes down initial_state : The state of the host when it is first added to Nagios. Valid options are: - s = UP - d = DOWN - u = UNREACHABLE retry_interval : How often should Nagios try to check the host after the initial down alert passive_checks_enabled : Sets whether or not passive checks are enabled for the host active_checks_enabled : Sets whether or not active checks are enabled for the host obsess_over_host : Sets whether or not Nagios 'obsesses' over the host using the ochp_command event_handler : The command that should be run whenver a change in the state of the host is detected event_handler_enabled : Sets whether or not event handlers should be enabled for the host flap_detection_enabled : Sets whether or not flap detection is enabled for the host flap_detection_options : Determines what flap detection logic will be used for the host. One or more of the following valid options can be provided: - o = UP - d = DOWN - u = UNREACHABLE low_flap_threshold : The minimum threshold that should be used when detecting if flapping is occurring high_flap_threshold : The maximum threshold that should be used when detecting if flapping is occurring process_perf_data : Determines if Nagios should process performance data retain_status_information : Sets whether or not status related information should be kept for the host retain_nonstatus_information : Sets whether or not non-status related information should be kept for the host check_freshness : Sets whether or not freshness checks are enabled for the host freshness_threshold : The freshness threshold used for the host first_notification_delay : The amount of time to wait to send out the first notification when a host enters a non-UP state notification_options : Determines when Nagios should alert if a host is one or more of the following options: - o = UP - d = DOWN - u = UNREACHABLE - r = RECOVERY - f = FLAPPING - s = SCHEDULED DOWNTIME notifications_enabled : Determines if Nagios should send notifications stalking_options : A list of options to determine which states, if any, should be stalked by Nagios. Refer to the Nagios documentation for more information on stalking icon_image : The icon to display in Nagios icon_image_alt : The text to display when hovering over the icon_image or the text to display if the icon_image is unavailable vrml_image : The image that will be used as a texture map for the specified host statusmap_image : The name of the image that should be used in the statusmap CGI in Nagios 2d_coords : The coordinates to use when drawing the host in the statusmap CGI 3d_coords : The coordinates to use when drawing the host in the statuswrl CGI","title":"rsource_host"},{"location":"resources/resource_host/#resource-host","text":"","title":"Resource: Host"},{"location":"resources/resource_host/#overview","text":"This resource manages Nagios hosts. Nagios monitors hosts based off health checks defined by an administrator. Refer to the object definition for hosts from Nagios to learn more","title":"Overview"},{"location":"resources/resource_host/#best-practices","text":"This resource allows you to configure any attribute on a host, however, we recommend to manually create a host template that contains common settings for the hosts, and then use the host resource to create your hosts and set host specific attributes.","title":"Best practices"},{"location":"resources/resource_host/#example","text":"resource \"nagios_host\" \"host1\" { name = \"host1\" address = \"127.0.0.1\" display_name = \"host1 - Test server\" max_check_attempts = \"2\" check_period = \"24x7\" notification_interval = \"5\" notification_period = \"24x7\" contacts = [ \"nagiosadmin\" ] alias = \"host1\" templates = [ \"generic-host\" ] check_command = \"check_icmp\" contact_groups = [ \"noc_staff\" ] notes = \"If this host is down for more than 20 mninutes, page out to the operations on-call\" notes_url = \"http://docs.company.com/host_alert\" action_url = \"http://docs.company.com/host_alert/actions\" initial_state = \"s\" retry_interval = \"5\" passive_checks_enabled = 1 active_checks_enabled = 1 obsess_over_host = 0 process_perf_data = 1 notification_options = [ \"d\" ] notifications_enabled = 1 }","title":"Example"},{"location":"resources/resource_host/#arguments","text":"Below is a brief description of what each field is used for in Nagios. Refer to the official Nagios documentation for more detail name (required): The name of the host address (required): The IP address of the host display_name : Another name for the host that will be displayed in the web interface. If left blank, the value from name will be displayed max_check_attempts (required): How many times to retry the host check before alerting when the state is anything other than OK check_period (required): The time period during which active checks of the host can be made notification_interval (required): How long to wait before sending another notification to a contact that the host is down notification_period (required): The time period during which notifications can be sent for a host alert contacts (required): The list of users that Nagios should alert when a host is down alias : A longer name to describe the host templates : A list of host templates to apply to the host check_command : The name of the command that should be used to check if the host is up or down contact_groups : A list of the contact groups that should be notified if the host goes down notes : Notes about the host that may assist with troubleshooting notes_url : URL to a third-party documentation respoitory containing more information about the host action_url : URL to a third-party documentation repository containing actions to take in the event the host goes down initial_state : The state of the host when it is first added to Nagios. Valid options are: - s = UP - d = DOWN - u = UNREACHABLE retry_interval : How often should Nagios try to check the host after the initial down alert passive_checks_enabled : Sets whether or not passive checks are enabled for the host active_checks_enabled : Sets whether or not active checks are enabled for the host obsess_over_host : Sets whether or not Nagios 'obsesses' over the host using the ochp_command event_handler : The command that should be run whenver a change in the state of the host is detected event_handler_enabled : Sets whether or not event handlers should be enabled for the host flap_detection_enabled : Sets whether or not flap detection is enabled for the host flap_detection_options : Determines what flap detection logic will be used for the host. One or more of the following valid options can be provided: - o = UP - d = DOWN - u = UNREACHABLE low_flap_threshold : The minimum threshold that should be used when detecting if flapping is occurring high_flap_threshold : The maximum threshold that should be used when detecting if flapping is occurring process_perf_data : Determines if Nagios should process performance data retain_status_information : Sets whether or not status related information should be kept for the host retain_nonstatus_information : Sets whether or not non-status related information should be kept for the host check_freshness : Sets whether or not freshness checks are enabled for the host freshness_threshold : The freshness threshold used for the host first_notification_delay : The amount of time to wait to send out the first notification when a host enters a non-UP state notification_options : Determines when Nagios should alert if a host is one or more of the following options: - o = UP - d = DOWN - u = UNREACHABLE - r = RECOVERY - f = FLAPPING - s = SCHEDULED DOWNTIME notifications_enabled : Determines if Nagios should send notifications stalking_options : A list of options to determine which states, if any, should be stalked by Nagios. Refer to the Nagios documentation for more information on stalking icon_image : The icon to display in Nagios icon_image_alt : The text to display when hovering over the icon_image or the text to display if the icon_image is unavailable vrml_image : The image that will be used as a texture map for the specified host statusmap_image : The name of the image that should be used in the statusmap CGI in Nagios 2d_coords : The coordinates to use when drawing the host in the statusmap CGI 3d_coords : The coordinates to use when drawing the host in the statuswrl CGI","title":"Arguments"},{"location":"resources/resource_hostgroup/","text":"Resource: Hostgroup Overview This resource manages Nagios host groups. Host groups are used to logically group servers together that may share a similar function or other attribute. Refer to the object definition for hostgroups from Nagios to learn more Refer to the object definition for hostgroups from Nagios to learn more Example resource \"nagios_hostgroup\" \"hostgroup1\" { name = \"hostgroup1\" alias = \"This is an example hostgroup\" members = [ \"host1.test.local\", \"host2.test.local\" ] } Arguments name : The name of the Nagios host group alias : The description or other name that the host group may be called. This field can be longer and more descriptive members : A list of hosts that should be members of the host group. The members must be valid hosts within Nagios and must be active. The provider will NOT validate that the host is correctly configured in Nagios. The reason for this is, if the membership grows to hundreds or thousands of hosts, querying for each one of those would create performance issues.","title":"resource_hostgroup"},{"location":"resources/resource_hostgroup/#resource-hostgroup","text":"","title":"Resource: Hostgroup"},{"location":"resources/resource_hostgroup/#overview","text":"This resource manages Nagios host groups. Host groups are used to logically group servers together that may share a similar function or other attribute. Refer to the object definition for hostgroups from Nagios to learn more Refer to the object definition for hostgroups from Nagios to learn more","title":"Overview"},{"location":"resources/resource_hostgroup/#example","text":"resource \"nagios_hostgroup\" \"hostgroup1\" { name = \"hostgroup1\" alias = \"This is an example hostgroup\" members = [ \"host1.test.local\", \"host2.test.local\" ] }","title":"Example"},{"location":"resources/resource_hostgroup/#arguments","text":"name : The name of the Nagios host group alias : The description or other name that the host group may be called. This field can be longer and more descriptive members : A list of hosts that should be members of the host group. The members must be valid hosts within Nagios and must be active. The provider will NOT validate that the host is correctly configured in Nagios. The reason for this is, if the membership grows to hundreds or thousands of hosts, querying for each one of those would create performance issues.","title":"Arguments"},{"location":"resources/resource_service/","text":"Resource: Service Overview This resource manages Nagios services. Nagios monitors services based off health checks defined by an administrator. Refer to the object definition for services from Nagios to learn more Best practices This resource allows you to configure any attribute for a service, however, we recommend to manually create a service template that contains common settings for the service, and then use this resource to create your services and set service or host specific attributes. Example resource \"nagios_service\" \"service1\" { service_name = \"ping\" host_name = [ \"websrv1\", \"websrv2\", \"dc1\" ] description = \"Service pings a server\" check_command = \"check_ping!3000.0!80%!5000.0!100%!!!!\" max_check_attempts = \"5\" check_interval = \"5\" retry_interval = \"5\" check_period = \"24x7\" notification_interval = \"10\" notification_period = \"24x7\" contacts = [ \"nagiosadmin\" ] templates = [ \"generic-service\" ] is_volatile = false initial_state = \"s\" active_checks_enabled = true passive_checks_enabled = true obsess_over_service = false check_freshness = false freshness_threshold = \"10\" event_handler = \"xi_service_event_handler\" event_handler_enabled = true low_flap_threshold = \"20\" high_flap_threshold = \"30\" flap_detection_enabled = false flap_detection_options = [ \"d\", \"u\" ] process_perf_data = true retain_status_information = true retain_nonstatus_information = true first_notification_delay = \"5\" notification_options = [ \"d\", \"u\" ] notifications_enabled = true contact_groups = [ \"contact_group1\" ] notes = \"Some notes about the service\" notes_url = \"http://docs.company.com/host_alert\" action_url = \"http://docs.company.com/host_alert/actions\" icon_image = \"pingicon.jpg\" icon_image_alt = \"Ping check\" } Arguments Below is a brief description of what each field is used for in Nagios. Refer to the official Nagios documentation for more detail service_name (required): The name of the service host_name (required): The hosts that the service should run on description (required): Defines the description of the service. It may contain spaces, dashes and colons (avoid using semicolons, apostrophes and quotation marks).f display_name : Another name for the service that will be displayed in the web interface. If left blank, the value from description will be displayed check_command (required): The name of the command that should be used to check the status of the service max_check_attempts (required): How many times to retry the service check before alerting when the state is anything other than OK templates : A list of Nagios templates to apply to the service is_volatile : Determines if the service is \"volatile\". Services typically are not volatile and this should be disabled. This accepts either true or false . The default value is false initial_state : By default, Nagios will assume the service are in an OK state. Valid options are: - s = UP - d = DOWN - u = UNREACHABLE check_interval : The number of minutes to wait until the next regular check of the service retry_interval : The number of minutes to wait until re-checking the service active_checks_enabled : Sets whether or not active checks are enabled for the service passive_checks_enabled : Sets whether or not passive checks are enabled for the service check_period (required): The time period during which active checks of the service can be made obsess_over_service : Sets whether or not Nagios 'obsesses' over the service using the ocsp_command check_freshness : Sets whether or not freshness checks are enabled for the service freshness_threshold : The freshness threshold used for the service event_handler : The command that should be run whenver a change in the state of the service is detected event_handler_enabled : Sets whether or not event handlers should be enabled for the service low_flap_threshold : The minimum threshold that should be used when detecting if flapping is occurring high_flap_threshold : The maximum threshold that should be used when detecting if flapping is occurring flap_detection_enabled : Sets whether or not flap detection is enabled for the service flap_detection_options : Determines what flap detection logic will be used for the service. One or more of the following valid options can be provided: - o = UP - d = DOWN - u = UNREACHABLE process_perf_data : Determines if Nagios should process performance data retain_status_information : Sets whether or not status related information should be kept for the service retain_nonstatus_information : Sets whether or not non-status related information should be kept for the service notification_interval (required): How long to wait before sending another notification to a contact that the service is down first_notification_delay : The amount of time to wait to send out the first notification when a service enters a non-UP state notification_period (required): The time period during which notifications can be sent for a service alert notification_options : Determines when Nagios should alert if a host is one or more of the following options: - o = UP - d = DOWN - u = UNREACHABLE - r = RECOVERY - f = FLAPPING - s = SCHEDULED DOWNTIME notifications_enabled : Determines if Nagios should send notifications contacts (required): The list of users that Nagios should alert when a service is down contact_groups : A list of the contact groups that should be notified if the service goes down stalking_options : A list of options to determine which states, if any, should be stalked by Nagios. Refer to the Nagios documentation for more information on stalking notes : Notes about the service that may assist with troubleshooting notes_url : URL to a third-party documentation respoitory containing more information about the service action_url : URL to a third-party documentation repository containing actions to take in the event the service goes down icon_image : The icon to display in Nagios icon_image_alt : The text to display when hovering over the icon_image or the text to display if the icon_image is unavailable","title":"Resource: Service"},{"location":"resources/resource_service/#resource-service","text":"","title":"Resource: Service"},{"location":"resources/resource_service/#overview","text":"This resource manages Nagios services. Nagios monitors services based off health checks defined by an administrator. Refer to the object definition for services from Nagios to learn more","title":"Overview"},{"location":"resources/resource_service/#best-practices","text":"This resource allows you to configure any attribute for a service, however, we recommend to manually create a service template that contains common settings for the service, and then use this resource to create your services and set service or host specific attributes.","title":"Best practices"},{"location":"resources/resource_service/#example","text":"resource \"nagios_service\" \"service1\" { service_name = \"ping\" host_name = [ \"websrv1\", \"websrv2\", \"dc1\" ] description = \"Service pings a server\" check_command = \"check_ping!3000.0!80%!5000.0!100%!!!!\" max_check_attempts = \"5\" check_interval = \"5\" retry_interval = \"5\" check_period = \"24x7\" notification_interval = \"10\" notification_period = \"24x7\" contacts = [ \"nagiosadmin\" ] templates = [ \"generic-service\" ] is_volatile = false initial_state = \"s\" active_checks_enabled = true passive_checks_enabled = true obsess_over_service = false check_freshness = false freshness_threshold = \"10\" event_handler = \"xi_service_event_handler\" event_handler_enabled = true low_flap_threshold = \"20\" high_flap_threshold = \"30\" flap_detection_enabled = false flap_detection_options = [ \"d\", \"u\" ] process_perf_data = true retain_status_information = true retain_nonstatus_information = true first_notification_delay = \"5\" notification_options = [ \"d\", \"u\" ] notifications_enabled = true contact_groups = [ \"contact_group1\" ] notes = \"Some notes about the service\" notes_url = \"http://docs.company.com/host_alert\" action_url = \"http://docs.company.com/host_alert/actions\" icon_image = \"pingicon.jpg\" icon_image_alt = \"Ping check\" }","title":"Example"},{"location":"resources/resource_service/#arguments","text":"Below is a brief description of what each field is used for in Nagios. Refer to the official Nagios documentation for more detail service_name (required): The name of the service host_name (required): The hosts that the service should run on description (required): Defines the description of the service. It may contain spaces, dashes and colons (avoid using semicolons, apostrophes and quotation marks).f display_name : Another name for the service that will be displayed in the web interface. If left blank, the value from description will be displayed check_command (required): The name of the command that should be used to check the status of the service max_check_attempts (required): How many times to retry the service check before alerting when the state is anything other than OK templates : A list of Nagios templates to apply to the service is_volatile : Determines if the service is \"volatile\". Services typically are not volatile and this should be disabled. This accepts either true or false . The default value is false initial_state : By default, Nagios will assume the service are in an OK state. Valid options are: - s = UP - d = DOWN - u = UNREACHABLE check_interval : The number of minutes to wait until the next regular check of the service retry_interval : The number of minutes to wait until re-checking the service active_checks_enabled : Sets whether or not active checks are enabled for the service passive_checks_enabled : Sets whether or not passive checks are enabled for the service check_period (required): The time period during which active checks of the service can be made obsess_over_service : Sets whether or not Nagios 'obsesses' over the service using the ocsp_command check_freshness : Sets whether or not freshness checks are enabled for the service freshness_threshold : The freshness threshold used for the service event_handler : The command that should be run whenver a change in the state of the service is detected event_handler_enabled : Sets whether or not event handlers should be enabled for the service low_flap_threshold : The minimum threshold that should be used when detecting if flapping is occurring high_flap_threshold : The maximum threshold that should be used when detecting if flapping is occurring flap_detection_enabled : Sets whether or not flap detection is enabled for the service flap_detection_options : Determines what flap detection logic will be used for the service. One or more of the following valid options can be provided: - o = UP - d = DOWN - u = UNREACHABLE process_perf_data : Determines if Nagios should process performance data retain_status_information : Sets whether or not status related information should be kept for the service retain_nonstatus_information : Sets whether or not non-status related information should be kept for the service notification_interval (required): How long to wait before sending another notification to a contact that the service is down first_notification_delay : The amount of time to wait to send out the first notification when a service enters a non-UP state notification_period (required): The time period during which notifications can be sent for a service alert notification_options : Determines when Nagios should alert if a host is one or more of the following options: - o = UP - d = DOWN - u = UNREACHABLE - r = RECOVERY - f = FLAPPING - s = SCHEDULED DOWNTIME notifications_enabled : Determines if Nagios should send notifications contacts (required): The list of users that Nagios should alert when a service is down contact_groups : A list of the contact groups that should be notified if the service goes down stalking_options : A list of options to determine which states, if any, should be stalked by Nagios. Refer to the Nagios documentation for more information on stalking notes : Notes about the service that may assist with troubleshooting notes_url : URL to a third-party documentation respoitory containing more information about the service action_url : URL to a third-party documentation repository containing actions to take in the event the service goes down icon_image : The icon to display in Nagios icon_image_alt : The text to display when hovering over the icon_image or the text to display if the icon_image is unavailable","title":"Arguments"},{"location":"resources/resource_servicegroup/","text":"Resource: Servicegroup Overview This resource manages Nagios servicegroups. Servicegroups are used to logically group services together that may share a similar function or provide checks for a specific type of server. Refer to the object definition for servicegroups from Nagios to learn more Example resource \"nagios_servicegroup\" \"servicegroup1\" { name = \"servicegroup1\" alias = \"This is an example servicegroup\" members = [ \"svcgroup1\", \"ping_check\" ] notes = \"Example notes\" notes_url = \"https://docs.example.com/servicegroup/notes\" action_url = \"https://dovs.example.com/servicegroup/action\" } Arguments name : The name of the Nagios service group alias : The description or other name that the servicegroup may be called. This field can be longer and more descriptive members : A list of services and other service groups that should be members of the service group. The members must be valid services and service groups within Nagios and must be active. The provider will NOT validate that the object is correctly configured in Nagios. The reason for this is, if the membership grows to hundreds or thousands of hosts, querying for each one of those would create performance issues. notes : Notes about the service group that may assist with troubleshooting notes_url : URL to a third-party documentation respoitory containing more information about the service group action_url : URL to a third-party documentation repository containing actions to take in the event the service group goes down","title":"Resource: Servicegroup"},{"location":"resources/resource_servicegroup/#resource-servicegroup","text":"","title":"Resource: Servicegroup"},{"location":"resources/resource_servicegroup/#overview","text":"This resource manages Nagios servicegroups. Servicegroups are used to logically group services together that may share a similar function or provide checks for a specific type of server. Refer to the object definition for servicegroups from Nagios to learn more","title":"Overview"},{"location":"resources/resource_servicegroup/#example","text":"resource \"nagios_servicegroup\" \"servicegroup1\" { name = \"servicegroup1\" alias = \"This is an example servicegroup\" members = [ \"svcgroup1\", \"ping_check\" ] notes = \"Example notes\" notes_url = \"https://docs.example.com/servicegroup/notes\" action_url = \"https://dovs.example.com/servicegroup/action\" }","title":"Example"},{"location":"resources/resource_servicegroup/#arguments","text":"name : The name of the Nagios service group alias : The description or other name that the servicegroup may be called. This field can be longer and more descriptive members : A list of services and other service groups that should be members of the service group. The members must be valid services and service groups within Nagios and must be active. The provider will NOT validate that the object is correctly configured in Nagios. The reason for this is, if the membership grows to hundreds or thousands of hosts, querying for each one of those would create performance issues. notes : Notes about the service group that may assist with troubleshooting notes_url : URL to a third-party documentation respoitory containing more information about the service group action_url : URL to a third-party documentation repository containing actions to take in the event the service group goes down","title":"Arguments"}]}